---
- hosts:
  - vagrant
  - prod

  # gather_facts: no

  vars_files:
  - vars/main.yml
  - vars/passwords.yml

  pre_tasks:
  - name: Set the hostname.
    hostname: name={{ hostname }}
    when: hostname is defined and hostname != 'skip'

  - name: Debug.
    debug: msg="groups - {{ group_names }}"

  - name: Ensure that the web user exists.
    user:
      name: "{{ web_user }}"
      groups: "{{ web_server_group }}"
      append: yes
      shell: /bin/bash
      state: present

  - name: Ensure that the web user's bin directory is created.
    file:
      path: /home/{{ web_user }}/bin
      owner: "{{ web_user }}"
      group: "{{ web_user }}"
      state: directory

  - name: Add the bin directory to the web user's path.
    lineinfile:
      path: /home/{{ web_user }}/.bashrc
      create: yes
      line: "export PATH=$PATH:$HOME/bin"

  - name: Set up authorized_keys for the web user.
    authorized_key:
      user: "{{ web_user }}"
      key: "{{ item }}"
      state: present
    with_file: /home/benji/.ssh/id_rsa.pub

    # todo: either replace hostname with ansible_ssh_host or add hostname to the
    # local SSH config file.
  - name: Test SSH connection to the web user.
    command: ssh {{ web_user }}@{{ hostname }} ls
    delegate_to: 127.0.0.1
    become: False

  roles:
  - geerlingguy.git
  - geerlingguy.apache
  - geerlingguy.mysql
  - geerlingguy.php
  - geerlingguy.php-mysql
  - geerlingguy.composer
  - role: geerlingguy.drush
    become: yes
    become_user: drupal
  - geerlingguy.munin
  - geerlingguy.munin-node

  tasks:

  - name: Ensure that required directories are created.
    file:
      path: "{{ web_base_dir }}/{{ item.key }}"
      mode: "{{ item.value }}"
      owner: "{{ web_user }}"
      group: "{{ web_server_group }}"
      state: directory
    with_dict: "{{ web_dirs }}"

  - name: Ensure that access is granted to web roots.
    template:
      src=templates/security-arachne.conf.j2
      dest=/etc/apache2/conf-available/security-arachne.conf

  - name: Ensure that the custom access control is enabled.
    command: a2enconf security-arachne
    notify: restart apache

  - name: Ensure that /etc/drush is created.
    file:
      path: /etc/drush
      group: "{{ web_user }}"
      state: directory

  - name: Set up the Drupal sites defined in the group_vars file.
    include_tasks: tasks/addsite.yml
    vars:
      site_info: "{{ item }}"
    with_items: "{{ drupal_sites }}"

  - name: Ensure that a local drush alias file is created.
    template:
      dest: ~/.drush/{{ hostname }}.aliases.drushrc.php
      src: templates/local.drushrc.php.j2
    delegate_to: 127.0.0.1
    become: False
