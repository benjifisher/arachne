---
- hosts: all
  # gather_facts: no

  vars_files:
  - vars/main.yml
  - vars/passwords.yml

  pre_tasks:
    - name: Set the hostname.
      hostname: name={{ hostname }}
      when: hostname is defined and hostname != 'skip'

  roles:
    - git
    - apache
    - mysql
    - php
    - php-mysql
    - composer
    - drush
    - munin
    - munin-node

  tasks:
    - name: Ensure that the web user exists.
      user:
        name: "{{ web_user }}"
        groups: "{{ web_server_group }}"
        append: yes
        state: present

    - name: Ensure that required directories are created.
      file:
        path: "{{ web_base_dir }}/{{ item.key }}"
        mode: "{{ item.value }}"
        owner: "{{ web_user }}"
        group: "{{ web_server_group }}"
        state: directory
        recurse: yes
      with_dict: web_dirs

    - name: Ensure that access is granted to web roots.
      template:
        src=templates/security-arachne.conf.j2
        dest=/etc/apache2/conf-available/security-arachne.conf

    - name: Ensure that the custom access control is enabled.
      command: a2enconf security-arachne
      notify: restart apache

    - name: Ensure that the bare repositories are initialized.
      command: >
        git init --bare  --shared=0600
        {{ web_base_dir }}/repos/{{ item.name }}.git
      sudo: yes
      sudo_user: "{{ web_user }}"
      with_items: drupal_sites

      # TODO: This will have to be done from localhost.
    - name: Ensure that the repositories are cloned from local copies.
      git:
        repo: "{{ item.repo }}"
        dest: "{{ web_base_dir }}/sites/{{ item.name }}"
        update: no
      sudo: yes
      sudo_user: "{{ web_user }}"
      ignore_errors: true
      # with_items: drupal_sites
      with_items: []

      # When we create the bare repositories, they have no master branch, so
      # git complains when we try to clone them. For now, just ignore the
      # errors.
    - name: Ensure that the repositories are cloned to the sites directory.
      git:
        repo: "{{ web_base_dir }}/repos/{{ item.name }}.git"
        dest: "{{ web_base_dir }}/sites/{{ item.name }}"
        update: no
      sudo: yes
      sudo_user: "{{ web_user }}"
      ignore_errors: true
      with_items: drupal_sites
